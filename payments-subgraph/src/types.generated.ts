/* eslint-disable */
/* 
* This file is auto-generated by Graphweaver. 
* Please do not edit it directly.
*/
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
  /** A duration in nanoseconds */
  NanoDuration: { input: any; output: any; }
  /** A timestamp in nanoseconds */
  NanoTimestamp: { input: any; output: any; }
  _Any: { input: any; output: any; }
  federation__FieldSet: { input: any; output: any; }
  link__Import: { input: any; output: any; }
};

export type AdminUiEntityAttributeMetadata = {
  __typename?: 'AdminUiEntityAttributeMetadata';
  exportPageSize?: Maybe<Scalars['Float']['output']>;
  isReadOnly?: Maybe<Scalars['Boolean']['output']>;
};

export type AdminUiEntityMetadata = {
  __typename?: 'AdminUiEntityMetadata';
  attributes: AdminUiEntityAttributeMetadata;
  backendId?: Maybe<Scalars['String']['output']>;
  defaultFilter?: Maybe<Scalars['JSON']['output']>;
  defaultSort?: Maybe<Scalars['JSON']['output']>;
  excludeFromTracing: Scalars['Boolean']['output'];
  fieldForDetailPanelNavigationId: Scalars['String']['output'];
  fields: Array<AdminUiFieldMetadata>;
  hideInSideBar: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  plural: Scalars['String']['output'];
  primaryKeyField: Scalars['String']['output'];
  summaryField?: Maybe<Scalars['String']['output']>;
  supportedAggregationTypes: Array<AggregationType>;
};

export type AdminUiEnumMetadata = {
  __typename?: 'AdminUiEnumMetadata';
  name: Scalars['String']['output'];
  values: Array<AdminUiEnumValueMetadata>;
};

export type AdminUiEnumValueMetadata = {
  __typename?: 'AdminUiEnumValueMetadata';
  name: Scalars['String']['output'];
  value: Scalars['String']['output'];
};

export type AdminUiFieldAttributeMetadata = {
  __typename?: 'AdminUiFieldAttributeMetadata';
  isReadOnly: Scalars['Boolean']['output'];
  isRequired: Scalars['Boolean']['output'];
};

export type AdminUiFieldExtensionsMetadata = {
  __typename?: 'AdminUiFieldExtensionsMetadata';
  key?: Maybe<Scalars['String']['output']>;
};

export type AdminUiFieldMetadata = {
  __typename?: 'AdminUiFieldMetadata';
  attributes?: Maybe<AdminUiFieldAttributeMetadata>;
  extensions?: Maybe<AdminUiFieldExtensionsMetadata>;
  filter?: Maybe<AdminUiFilterMetadata>;
  hideInDetailForm?: Maybe<Scalars['Boolean']['output']>;
  hideInFilterBar?: Maybe<Scalars['Boolean']['output']>;
  hideInTable?: Maybe<Scalars['Boolean']['output']>;
  isArray?: Maybe<Scalars['Boolean']['output']>;
  name: Scalars['String']['output'];
  relatedEntity?: Maybe<Scalars['String']['output']>;
  relationshipType?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type AdminUiFilterMetadata = {
  __typename?: 'AdminUiFilterMetadata';
  type: AdminUiFilterType;
};

export enum AdminUiFilterType {
  Boolean = 'BOOLEAN',
  DateRange = 'DATE_RANGE',
  Enum = 'ENUM',
  Numeric = 'NUMERIC',
  Relationship = 'RELATIONSHIP',
  Text = 'TEXT'
}

export type AdminUiMetadata = {
  __typename?: 'AdminUiMetadata';
  entities: Array<AdminUiEntityMetadata>;
  enums: Array<AdminUiEnumMetadata>;
};

export type Agent = {
  __typename?: 'Agent';
  birthYear?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  height?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

/** Data needed to create or update Agents. If an ID is passed, this is an update, otherwise it's an insert. */
export type AgentCreateOrUpdateInput = {
  birthYear?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Data needed to create Agents. */
export type AgentInsertInput = {
  birthYear?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

/** Data needed to update Agents. An ID must be passed. */
export type AgentUpdateInput = {
  birthYear?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

export type AgentsListFilter = {
  birthYear?: InputMaybe<Scalars['String']['input']>;
  birthYear_gt?: InputMaybe<Scalars['String']['input']>;
  birthYear_gte?: InputMaybe<Scalars['String']['input']>;
  birthYear_ilike?: InputMaybe<Scalars['String']['input']>;
  birthYear_in?: InputMaybe<Array<Scalars['String']['input']>>;
  birthYear_like?: InputMaybe<Scalars['String']['input']>;
  birthYear_lt?: InputMaybe<Scalars['String']['input']>;
  birthYear_lte?: InputMaybe<Scalars['String']['input']>;
  birthYear_ne?: InputMaybe<Scalars['String']['input']>;
  birthYear_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  birthYear_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  birthYear_null?: InputMaybe<Scalars['Boolean']['input']>;
  gender?: InputMaybe<Scalars['String']['input']>;
  gender_gt?: InputMaybe<Scalars['String']['input']>;
  gender_gte?: InputMaybe<Scalars['String']['input']>;
  gender_ilike?: InputMaybe<Scalars['String']['input']>;
  gender_in?: InputMaybe<Array<Scalars['String']['input']>>;
  gender_like?: InputMaybe<Scalars['String']['input']>;
  gender_lt?: InputMaybe<Scalars['String']['input']>;
  gender_lte?: InputMaybe<Scalars['String']['input']>;
  gender_ne?: InputMaybe<Scalars['String']['input']>;
  gender_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  gender_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  gender_null?: InputMaybe<Scalars['Boolean']['input']>;
  height?: InputMaybe<Scalars['String']['input']>;
  height_gt?: InputMaybe<Scalars['String']['input']>;
  height_gte?: InputMaybe<Scalars['String']['input']>;
  height_ilike?: InputMaybe<Scalars['String']['input']>;
  height_in?: InputMaybe<Array<Scalars['String']['input']>>;
  height_like?: InputMaybe<Scalars['String']['input']>;
  height_lt?: InputMaybe<Scalars['String']['input']>;
  height_lte?: InputMaybe<Scalars['String']['input']>;
  height_ne?: InputMaybe<Scalars['String']['input']>;
  height_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  height_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  height_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_gt?: InputMaybe<Scalars['ID']['input']>;
  id_gte?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_lt?: InputMaybe<Scalars['ID']['input']>;
  id_lte?: InputMaybe<Scalars['ID']['input']>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_gt?: InputMaybe<Scalars['String']['input']>;
  name_gte?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_lt?: InputMaybe<Scalars['String']['input']>;
  name_lte?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AgentsOrderByInput = {
  birthYear?: InputMaybe<Sort>;
  gender?: InputMaybe<Sort>;
  height?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
};

/** Pagination options for Agents. */
export type AgentsPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AgentsOrderByInput>;
};

export type AggregationResultFromPaymentsSubgraph = {
  __typename?: 'AggregationResultFromPaymentsSubgraph';
  count: Scalars['Int']['output'];
};

export enum AggregationType {
  Count = 'COUNT'
}

export type DeleteOneFilterInput = {
  id: Scalars['ID']['input'];
};

export type Invoice = {
  __typename?: 'Invoice';
  invoiceId: Scalars['ID']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Create a single Agent. */
  createAgent?: Maybe<Agent>;
  /** Create many Agents. */
  createAgents?: Maybe<Array<Maybe<Agent>>>;
  /** Create or update many Agents. */
  createOrUpdateAgents?: Maybe<Array<Maybe<Agent>>>;
  /** Create or update many Payments. */
  createOrUpdatePayments?: Maybe<Array<Maybe<Payment>>>;
  /** Create a single Payment. */
  createPayment?: Maybe<Payment>;
  /** Create many Payments. */
  createPayments?: Maybe<Array<Maybe<Payment>>>;
  /** Delete a single Agent. */
  deleteAgent?: Maybe<Scalars['Boolean']['output']>;
  /** Delete many Agents with a filter. */
  deleteAgents?: Maybe<Scalars['Boolean']['output']>;
  /** Delete a single Payment. */
  deletePayment?: Maybe<Scalars['Boolean']['output']>;
  /** Delete many Payments with a filter. */
  deletePayments?: Maybe<Scalars['Boolean']['output']>;
  /** Update a single Agent. */
  updateAgent?: Maybe<Agent>;
  /** Update many Agents. */
  updateAgents?: Maybe<Array<Maybe<Agent>>>;
  /** Update a single Payment. */
  updatePayment?: Maybe<Payment>;
  /** Update many Payments. */
  updatePayments?: Maybe<Array<Maybe<Payment>>>;
};


export type MutationCreateAgentArgs = {
  input: AgentInsertInput;
};


export type MutationCreateAgentsArgs = {
  input: Array<AgentInsertInput>;
};


export type MutationCreateOrUpdateAgentsArgs = {
  input: Array<AgentCreateOrUpdateInput>;
};


export type MutationCreateOrUpdatePaymentsArgs = {
  input: Array<PaymentCreateOrUpdateInput>;
};


export type MutationCreatePaymentArgs = {
  input: PaymentInsertInput;
};


export type MutationCreatePaymentsArgs = {
  input: Array<PaymentInsertInput>;
};


export type MutationDeleteAgentArgs = {
  filter: DeleteOneFilterInput;
};


export type MutationDeleteAgentsArgs = {
  filter: AgentsListFilter;
};


export type MutationDeletePaymentArgs = {
  filter: DeleteOneFilterInput;
};


export type MutationDeletePaymentsArgs = {
  filter: PaymentsListFilter;
};


export type MutationUpdateAgentArgs = {
  input: AgentUpdateInput;
};


export type MutationUpdateAgentsArgs = {
  input: Array<AgentUpdateInput>;
};


export type MutationUpdatePaymentArgs = {
  input: PaymentUpdateInput;
};


export type MutationUpdatePaymentsArgs = {
  input: Array<PaymentUpdateInput>;
};

export type Payment = {
  __typename?: 'Payment';
  agentId: Scalars['ID']['output'];
  amount: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  invoice: Invoice;
  invoiceId: Scalars['ID']['output'];
  notes?: Maybe<Scalars['String']['output']>;
  owner: Agent;
  paymentMethod: Scalars['String']['output'];
  reconciled: Scalars['Boolean']['output'];
};

/** Data needed to create or update Payments. If an ID is passed, this is an update, otherwise it's an insert. */
export type PaymentCreateOrUpdateInput = {
  agentId?: InputMaybe<Scalars['ID']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  invoiceId?: InputMaybe<Scalars['ID']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<AgentCreateOrUpdateInput>;
  paymentMethod?: InputMaybe<Scalars['String']['input']>;
  reconciled?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Data needed to create Payments. */
export type PaymentInsertInput = {
  agentId: Scalars['ID']['input'];
  amount: Scalars['String']['input'];
  invoiceId: Scalars['ID']['input'];
  notes?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<AgentCreateOrUpdateInput>;
  paymentMethod: Scalars['String']['input'];
  reconciled: Scalars['Boolean']['input'];
};

/** Data needed to update Payments. An ID must be passed. */
export type PaymentUpdateInput = {
  agentId?: InputMaybe<Scalars['ID']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  invoiceId?: InputMaybe<Scalars['ID']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<AgentCreateOrUpdateInput>;
  paymentMethod?: InputMaybe<Scalars['String']['input']>;
  reconciled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentsListFilter = {
  agentId?: InputMaybe<Scalars['ID']['input']>;
  agentId_gt?: InputMaybe<Scalars['ID']['input']>;
  agentId_gte?: InputMaybe<Scalars['ID']['input']>;
  agentId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  agentId_lt?: InputMaybe<Scalars['ID']['input']>;
  agentId_lte?: InputMaybe<Scalars['ID']['input']>;
  agentId_ne?: InputMaybe<Scalars['ID']['input']>;
  agentId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  agentId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  agentId_null?: InputMaybe<Scalars['Boolean']['input']>;
  amount?: InputMaybe<Scalars['String']['input']>;
  amount_gt?: InputMaybe<Scalars['String']['input']>;
  amount_gte?: InputMaybe<Scalars['String']['input']>;
  amount_ilike?: InputMaybe<Scalars['String']['input']>;
  amount_in?: InputMaybe<Array<Scalars['String']['input']>>;
  amount_like?: InputMaybe<Scalars['String']['input']>;
  amount_lt?: InputMaybe<Scalars['String']['input']>;
  amount_lte?: InputMaybe<Scalars['String']['input']>;
  amount_ne?: InputMaybe<Scalars['String']['input']>;
  amount_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  amount_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  amount_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_gt?: InputMaybe<Scalars['ID']['input']>;
  id_gte?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_lt?: InputMaybe<Scalars['ID']['input']>;
  id_lte?: InputMaybe<Scalars['ID']['input']>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  invoiceId?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_gt?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_gte?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  invoiceId_lt?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_lte?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_ne?: InputMaybe<Scalars['ID']['input']>;
  invoiceId_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  invoiceId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  invoiceId_null?: InputMaybe<Scalars['Boolean']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  notes_gt?: InputMaybe<Scalars['String']['input']>;
  notes_gte?: InputMaybe<Scalars['String']['input']>;
  notes_ilike?: InputMaybe<Scalars['String']['input']>;
  notes_in?: InputMaybe<Array<Scalars['String']['input']>>;
  notes_like?: InputMaybe<Scalars['String']['input']>;
  notes_lt?: InputMaybe<Scalars['String']['input']>;
  notes_lte?: InputMaybe<Scalars['String']['input']>;
  notes_ne?: InputMaybe<Scalars['String']['input']>;
  notes_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  notes_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  notes_null?: InputMaybe<Scalars['Boolean']['input']>;
  owner?: InputMaybe<AgentsListFilter>;
  paymentMethod?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_gt?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_gte?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_ilike?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_in?: InputMaybe<Array<Scalars['String']['input']>>;
  paymentMethod_like?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_lt?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_lte?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_ne?: InputMaybe<Scalars['String']['input']>;
  paymentMethod_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  paymentMethod_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  paymentMethod_null?: InputMaybe<Scalars['Boolean']['input']>;
  reconciled?: InputMaybe<Scalars['Boolean']['input']>;
  reconciled_in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  reconciled_ne?: InputMaybe<Scalars['Boolean']['input']>;
  reconciled_nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  reconciled_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  reconciled_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentsOrderByInput = {
  agentId?: InputMaybe<Sort>;
  amount?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  invoiceId?: InputMaybe<Sort>;
  notes?: InputMaybe<Sort>;
  paymentMethod?: InputMaybe<Sort>;
  reconciled?: InputMaybe<Sort>;
};

/** Pagination options for Payments. */
export type PaymentsPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PaymentsOrderByInput>;
};

export type Query = {
  __typename?: 'Query';
  /** Union of all types in this subgraph. This information is needed by the Apollo federation gateway. */
  _entities: Array<Maybe<_Entity>>;
  /** Query used by the Admin UI to introspect the schema and metadata. */
  _graphweaver?: Maybe<AdminUiMetadata>;
  /** The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied. */
  _service?: Maybe<_Service>;
  /** Get a single Agent. */
  agent?: Maybe<Agent>;
  /** Get multiple Agents. */
  agents?: Maybe<Array<Maybe<Agent>>>;
  /** Get a single Payment. */
  payment?: Maybe<Payment>;
  /** Get multiple Payments. */
  payments?: Maybe<Array<Maybe<Payment>>>;
  /** Get aggregated data for Payments. */
  payments_aggregate?: Maybe<AggregationResultFromPaymentsSubgraph>;
  /** Get a single Trace. */
  trace?: Maybe<Trace>;
  /** Get multiple Traces. */
  traces?: Maybe<Array<Maybe<Trace>>>;
  /** Get aggregated data for Traces. */
  traces_aggregate?: Maybe<AggregationResultFromPaymentsSubgraph>;
};


export type Query_EntitiesArgs = {
  representations?: InputMaybe<Array<Scalars['_Any']['input']>>;
};


export type QueryAgentArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAgentsArgs = {
  filter?: InputMaybe<AgentsListFilter>;
  pagination?: InputMaybe<AgentsPaginationInput>;
};


export type QueryPaymentArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPaymentsArgs = {
  filter?: InputMaybe<PaymentsListFilter>;
  pagination?: InputMaybe<PaymentsPaginationInput>;
};


export type QueryPayments_AggregateArgs = {
  filter?: InputMaybe<PaymentsListFilter>;
};


export type QueryTraceArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTracesArgs = {
  filter?: InputMaybe<TracesListFilter>;
  pagination?: InputMaybe<TracesPaginationInput>;
};


export type QueryTraces_AggregateArgs = {
  filter?: InputMaybe<TracesListFilter>;
};

export enum Sort {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Trace = {
  __typename?: 'Trace';
  attributes: Scalars['JSON']['output'];
  duration: Scalars['NanoDuration']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  parentId?: Maybe<Scalars['String']['output']>;
  spanId: Scalars['String']['output'];
  timestamp: Scalars['NanoTimestamp']['output'];
  traceId: Scalars['String']['output'];
};

export type TracesListFilter = {
  attributes?: InputMaybe<Scalars['JSON']['input']>;
  attributes_in?: InputMaybe<Array<Scalars['JSON']['input']>>;
  attributes_ne?: InputMaybe<Scalars['JSON']['input']>;
  attributes_nin?: InputMaybe<Array<Scalars['JSON']['input']>>;
  attributes_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  attributes_null?: InputMaybe<Scalars['Boolean']['input']>;
  duration?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_gt?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_gte?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_in?: InputMaybe<Array<Scalars['NanoDuration']['input']>>;
  duration_lt?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_lte?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_ne?: InputMaybe<Scalars['NanoDuration']['input']>;
  duration_nin?: InputMaybe<Array<Scalars['NanoDuration']['input']>>;
  duration_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  duration_null?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  id_gt?: InputMaybe<Scalars['ID']['input']>;
  id_gte?: InputMaybe<Scalars['ID']['input']>;
  id_in?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_lt?: InputMaybe<Scalars['ID']['input']>;
  id_lte?: InputMaybe<Scalars['ID']['input']>;
  id_ne?: InputMaybe<Scalars['ID']['input']>;
  id_nin?: InputMaybe<Array<Scalars['ID']['input']>>;
  id_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  id_null?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  name_gt?: InputMaybe<Scalars['String']['input']>;
  name_gte?: InputMaybe<Scalars['String']['input']>;
  name_ilike?: InputMaybe<Scalars['String']['input']>;
  name_in?: InputMaybe<Array<Scalars['String']['input']>>;
  name_like?: InputMaybe<Scalars['String']['input']>;
  name_lt?: InputMaybe<Scalars['String']['input']>;
  name_lte?: InputMaybe<Scalars['String']['input']>;
  name_ne?: InputMaybe<Scalars['String']['input']>;
  name_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  name_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  name_null?: InputMaybe<Scalars['Boolean']['input']>;
  parentId?: InputMaybe<Scalars['String']['input']>;
  parentId_gt?: InputMaybe<Scalars['String']['input']>;
  parentId_gte?: InputMaybe<Scalars['String']['input']>;
  parentId_ilike?: InputMaybe<Scalars['String']['input']>;
  parentId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  parentId_like?: InputMaybe<Scalars['String']['input']>;
  parentId_lt?: InputMaybe<Scalars['String']['input']>;
  parentId_lte?: InputMaybe<Scalars['String']['input']>;
  parentId_ne?: InputMaybe<Scalars['String']['input']>;
  parentId_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  parentId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  parentId_null?: InputMaybe<Scalars['Boolean']['input']>;
  spanId?: InputMaybe<Scalars['String']['input']>;
  spanId_gt?: InputMaybe<Scalars['String']['input']>;
  spanId_gte?: InputMaybe<Scalars['String']['input']>;
  spanId_ilike?: InputMaybe<Scalars['String']['input']>;
  spanId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  spanId_like?: InputMaybe<Scalars['String']['input']>;
  spanId_lt?: InputMaybe<Scalars['String']['input']>;
  spanId_lte?: InputMaybe<Scalars['String']['input']>;
  spanId_ne?: InputMaybe<Scalars['String']['input']>;
  spanId_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  spanId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  spanId_null?: InputMaybe<Scalars['Boolean']['input']>;
  timestamp?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_gt?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_gte?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_in?: InputMaybe<Array<Scalars['NanoTimestamp']['input']>>;
  timestamp_lt?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_lte?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_ne?: InputMaybe<Scalars['NanoTimestamp']['input']>;
  timestamp_nin?: InputMaybe<Array<Scalars['NanoTimestamp']['input']>>;
  timestamp_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  timestamp_null?: InputMaybe<Scalars['Boolean']['input']>;
  traceId?: InputMaybe<Scalars['String']['input']>;
  traceId_gt?: InputMaybe<Scalars['String']['input']>;
  traceId_gte?: InputMaybe<Scalars['String']['input']>;
  traceId_ilike?: InputMaybe<Scalars['String']['input']>;
  traceId_in?: InputMaybe<Array<Scalars['String']['input']>>;
  traceId_like?: InputMaybe<Scalars['String']['input']>;
  traceId_lt?: InputMaybe<Scalars['String']['input']>;
  traceId_lte?: InputMaybe<Scalars['String']['input']>;
  traceId_ne?: InputMaybe<Scalars['String']['input']>;
  traceId_nin?: InputMaybe<Array<Scalars['String']['input']>>;
  traceId_notnull?: InputMaybe<Scalars['Boolean']['input']>;
  traceId_null?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TracesOrderByInput = {
  attributes?: InputMaybe<Sort>;
  duration?: InputMaybe<Sort>;
  id?: InputMaybe<Sort>;
  name?: InputMaybe<Sort>;
  parentId?: InputMaybe<Sort>;
  spanId?: InputMaybe<Sort>;
  timestamp?: InputMaybe<Sort>;
  traceId?: InputMaybe<Sort>;
};

/** Pagination options for Traces. */
export type TracesPaginationInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TracesOrderByInput>;
};

export type _Entity = Agent | Invoice | Payment | Trace;

export type _Service = {
  __typename?: '_Service';
  sdl: Scalars['String']['output'];
};

export enum Link__Purpose {
  Execution = 'EXECUTION',
  Security = 'SECURITY'
}
